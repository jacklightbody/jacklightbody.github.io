<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-10-02T09:55:50-07:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Jack</title><subtitle></subtitle><entry><title type="html">Accounting</title><link href="http://localhost:4000/2025/10/01/accounting.html" rel="alternate" type="text/html" title="Accounting" /><published>2025-10-01T00:00:00-07:00</published><updated>2025-10-01T00:00:00-07:00</updated><id>http://localhost:4000/2025/10/01/accounting</id><content type="html" xml:base="http://localhost:4000/2025/10/01/accounting.html"><![CDATA[<p>I initially joined AngelList to learn more about venture capital and startups. Ya know, the sexy headline topics. Yet over time, I found myself increasingly interested in accounting, which was probably the last thing I would’ve expected. In fact, I’d never really thought about accounting before, nor was it in the job description when I joined. But over time it grew from a side consideration for the company— “Oh yeah, we have those two accountants who kept our valuations updated”— to one of the businesses main considerations.</p>

<p>Despite knowing nothing about the space, I was tapped to build the first version of our accounting product. I went into it with a vague “I guess now I gotta figure this out” attitude. I read a bunch of articles online, asked our accounting team a bunch of questions, and got to a point where I could rationalize why debits sometimes increased balances<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>. I essentially viewed accounting as a different way of visualizing the same information, much like you might export a dataset in json or xml.</p>

<p>To handle this, I built a system to transform a snapshot of our database into an accountant ready report. I compared these reports against the small handful that accountants were manually creating a quarter, and slowly iterated on any transaction rulesets that weren’t functioning quite right. But the core of the system still treated our relational database as the source of truth, and just added a translation layer to turn it into a table in excel that accountants could interact with.</p>

<p>While this system worked well enough, it didn’t get immediate applause from the accounting team. They used it, but seemed to keep tripping up on the same issues and didn’t seem to be gaining that much leverage vs. compiling reports manually.</p>

<p>Eventually, I learned that my core assumption of building a “translation” layer was deeply wrong. At it’s heart, much of accounting is really about control, not information presentation. By mandating that every debit have a corresponding credit for the same amount, accountants can instantly prevent a whole category of errors. By encoding multiple debits/credits in a single entry accountants can tell a story of a transaction that will bear up to auditor scrutiny. You just can’t get those same guarantees translating a relational database into double-entry bookkeeping, so any attempt will always fall short.</p>

<p>That was really weird to me. Databases have lots of nice properties that a flat set of transactions don’t. It’s really easy to encode relationships between things, to perform operations in bulk, and to add validations. But that’s my perspective as an engineer. For accountants, it’s exactly the opposite:</p>

<ul>
  <li>If they want to encode a relationship in a database, they need to bug an engineer</li>
  <li>If they want to perform a bulk operation they need to bug an engineer</li>
  <li>If they want to add validations, they need to bug an engineer</li>
</ul>

<p>In short, it’s a completely illegible system to them! They can only interact with the database through narrowly defined tools that I create with them to do so. And they’re relying on these tools they don’t fully understand to do their job, knowing full well that they’ll be the ones getting yelled at if things go south, not me. If I want to build a product that they’ll really enjoy and love, I needed to live in their world rather than asking them to use mine.</p>

<p>That was the initial hook that pulled me into accounting, but the closer I looked the more interesting it became. Double-entry bookkeeping was established <a href="https://www.math.stonybrook.edu/~tony/whatsnew/column/bookkeeping-1001/book1.html">half a millenia ago</a> and has now outlived countless civilizations, much less technologies. Accounting is absolutely everywhere, running through every single company and country out there. And it’s not a rigid formula, but something that’s formed and shaped both by the goals of the company and the person working on it: just like companies will spin up new corporate entities or change pricing structures purely to adjust their accounting numbers, different accountants will make have different risk tolerances and make different judgment calls.</p>

<p>Accounting doesn’t get the spotlight that software or management practices do, but it’s one of the deepest systems operating the modern world.</p>

<p>Or maybe I’m just a geek :)</p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>For anyone unfamiliar with accounting, here’s a 3 bullet explanation:</p>

      <ul>
        <li>Imagine all the money that a business earns, spends, owns, or owes is a bucket filled with different amounts of water (money).</li>
        <li>As transactions happen, water can only get moved by simultaneously decreasing the water in one bucket and increasing it in another bucket. This is called a debit/credit, and they always have to be paired.</li>
        <li>If the company earns some money, they credit their earnings (income) bucket. So the corresponding increase in owned assets (cash) must therefore be a debit.</li>
      </ul>
      <p><a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[I initially joined AngelList to learn more about venture capital and startups. Ya know, the sexy headline topics. Yet over time, I found myself increasingly interested in accounting, which was probably the last thing I would’ve expected. In fact, I’d never really thought about accounting before, nor was it in the job description when I joined. But over time it grew from a side consideration for the company— “Oh yeah, we have those two accountants who kept our valuations updated”— to one of the businesses main considerations.]]></summary></entry><entry><title type="html">People Magic</title><link href="http://localhost:4000/2025/09/22/people-magic.html" rel="alternate" type="text/html" title="People Magic" /><published>2025-09-22T00:00:00-07:00</published><updated>2025-09-22T00:00:00-07:00</updated><id>http://localhost:4000/2025/09/22/people-magic</id><content type="html" xml:base="http://localhost:4000/2025/09/22/people-magic.html"><![CDATA[<p>A startup runs on people in its early days. There are no rules, processes, or systems to help things get done. You want to ship some code? Cool, do it, no need for approval. Customer writes in with a complaint? Guess you have to get on the phone with them. Everyone is implicitly entrusted to do everything. They have to be.</p>

<p>Sure, it’s risky, but honestly, there isn’t much to protect. And there’s always a chance that it instead plays out as a high-variance upside moment. Maybe an engineer getting on the phone gets a key insight to build a better product. Maybe they fix the problem in 30 seconds flat and win a lifelong customer wowed by their speed. Everyone involved feels a sort of electric magic in every interaction that makes them want to buy in to the vision and build together.</p>

<p>As companies grow, they typically lose these human moments with process. Going broke because you messed up a customer call might be fine when you’re just two friends in a basement, but edges much closer to negligence when dozens or hundreds of people depend on you for their continued employment.</p>

<p>It starts off innocently enough, and usually with the best intentions. Now you have to create a Jira ticket before signing a new software contract so your CFO can actually track burn. But then your Security team wants to add on a few fields to the purchasing form to vet the software, your legal staff adds steps to review and execute the contract, and before you know it each purchase requires filling out a 10-page form to capture anything that might possibly be pertinent to the company in the future. Risk gets managed out, along with that live-wire energy.</p>

<p>I think this is essentially a difference in interfaces. Humans are leaky. We can’t help but expose some aspect of ourselves and our personality into every interaction, with unpredictable results. But as soon as you introduce an intermediary— a ticketing system, a form, whatever— it rounds much closer to a transaction. Give me X and I’ll give you Y. There’s no inadvertent exchange of values or slow build of empathy.</p>

<p>Good founders and leaders will fight this. They’ll ask “How could we do this faster” and force you to question things that the system has tried to make you assume. But often the problem is invisible to them! They have the leverage to force things through side channels. I know I’ve been guilty of this in the past- I didn’t want to fill out the 10-page form so I pinged the exact person I knew I needed to get it done. Even if I had gone through the process, it’d still feels like a human one because I’ve already built a relationship with the person behind the form.</p>

<p>But the average employee will have a markedly different experience. Most will opt to live within the system. The form is there, the process exists, so fill it out and move on. They’ll never get to know the person who replies to their request 2 days later, or have a chance to get an answer back in a minute flat, but they also don’t care. Their ass is covered either way.</p>

<p>But their experience is much more akin to a set of processes inexorably marching forward, not a set of teammates looking for an electric spark to create something new. The joy of a startup isn’t in process.</p>

<p>Free-wheeling energy can’t last forever. As the company grows, processes will inevitably form to smooth rough edges and risk. That’s fine. But leaders do have to constantly fight to preserve the humanness in the few moments that matter. Dogfood the product. Shadow the sales team. Get yelled at by a customer. The minute you lose these raw human interactions is the minute the company starts dying.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[A startup runs on people in its early days. There are no rules, processes, or systems to help things get done. You want to ship some code? Cool, do it, no need for approval. Customer writes in with a complaint? Guess you have to get on the phone with them. Everyone is implicitly entrusted to do everything. They have to be.]]></summary></entry><entry><title type="html">Stubbornness</title><link href="http://localhost:4000/2025/09/17/stubbornness.html" rel="alternate" type="text/html" title="Stubbornness" /><published>2025-09-17T00:00:00-07:00</published><updated>2025-09-17T00:00:00-07:00</updated><id>http://localhost:4000/2025/09/17/stubbornness</id><content type="html" xml:base="http://localhost:4000/2025/09/17/stubbornness.html"><![CDATA[<p>For most people, “Stubbornness” conjures images of a frustrating coworker digging in their heels on the smallest of compromises. They probably hated the experience.</p>

<p>But if we flip perspectives, I doubt their coworker thought they were being stubborn. Instead, they likely viewed it as being persistent in a cause they have conviction in. It’s just perception.</p>

<p>This especially matters for startups where high level of stubbornness is practically a base requirement. Navigating the <a href="https://spark-public.s3.amazonaws.com/startup/lecture_slides/lecture5-market-wireframing-design.pdf">idea maze</a> requires running into dozens of dead ends. Launches will flop, customers will churn, teammates will leave. Being successful requires getting through that gauntlet while still holding this crazy belief that the company can live up to your ambitions. It requires the right kind of stubbornness.</p>

<p>As I’ve developed in my career, I’ve found that the difference between productive and unproductive stubbornness is largely in <em>what you choose to be stubborn about</em>. Stubbornness itself (or persistence or discipline or …) is usually just a signal that someone <a href="https://alexw.substack.com/p/hire">gives a shit</a>.</p>

<p>At its best, stubbornness:</p>

<ol>
  <li>Focuses on an end goal that matters to the organization. At some companies, this might look like being stubborn about giving a specific edge-case customer a great experience. At others, it might look like maintaining code quality across a scaled engineering organization. At almost all, it will not be standardizing on tabs vs. spaces.</li>
  <li>Is flexible about the how, but fixated on the what. If you have a specific feature that’s confusing customers, you might try updating documentation, building a robust playbook for your customer support team, or overhauling the design. The goal is to solve the customer’s pain, not to just make the site prettier.</li>
</ol>

<p>As an example: At AngelList, I was incredibly stubborn about fully automating the accounting for all of our venture funds. Sometimes that aligned perfectly with the company’s overall vision and we’d staff whole teams of engineers on building out these systems. In other quarters it felt like I was the only one who even cared about this issue. But because I was flexible on the route to this goal, I was able to disagree and commit in lean quarters while still keeping the idea alive.</p>

<p>Beyond myself, I try to manage stubbornness in my team by:</p>

<ul>
  <li>Encouraging people to be stubborn about the right things. Reward good stubbornness and give feedback on the bad.</li>
  <li>Finding and sharing wins. Say your team is getting demotivated after a product launch a few months ago that hasn’t seen much growth. Yet you’re just starting to see signals that things are trending positively. Sharing those positive customer anecdotes or leading-indicators can help the team keep pushing until the win is obvious.</li>
  <li>Developing a balanced team that can be stubborn in different ways. I want to put the engineer who cares about readability on the infrastructure rewrite project and the product obsessive engineer on the customer-facing project. Coaching one into the other is likely going to yield worse results while also devouring time.</li>
  <li>Keeping the team focused on a small number of things that matter. You can only be stubborn about a few things at once without edging into asshole territory.
    <ul>
      <li>This includes redirecting people if they’re stubborn about something that doesn’t matter. This is a critical moment— doing it poorly can quickly demotivate the team, while doing it well can <a href="https://thinkgrowth.org/what-elon-musk-taught-me-about-growing-a-business-c2c173f5bff3">produce a superteam</a>.</li>
    </ul>
  </li>
  <li>Personally staying at the company for longer. The best way to encourage stubbornness is to model it yourself by staying long enough to build conviction and lead by example.</li>
</ul>

<p>Ultimately, managing and directing stubbornness is a big part of my job as a leader. That doesn’t mean avoiding stubborn people, but finding them and channeling their energy into the things that matter.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[For most people, “Stubbornness” conjures images of a frustrating coworker digging in their heels on the smallest of compromises. They probably hated the experience.]]></summary></entry><entry><title type="html">Working Hard</title><link href="http://localhost:4000/2025/09/08/working-hard.html" rel="alternate" type="text/html" title="Working Hard" /><published>2025-09-08T00:00:00-07:00</published><updated>2025-09-08T00:00:00-07:00</updated><id>http://localhost:4000/2025/09/08/working-hard</id><content type="html" xml:base="http://localhost:4000/2025/09/08/working-hard.html"><![CDATA[<p>I spent a week this summer hiking a <a href="https://www.wta.org/go-hiking/hikes/pacific-crest-trail-section-j-snoqualmie-pass-to-stevens-pass-east">75 mile stretch of the PCT</a> with a friend. We averaged ~18 miles a day, and would typically hike for 12 hours, get into camp around 7 at night, and fall into our sleeping bags shortly thereafter. On some nights I would’ve loved to have a bit more time to recover, but there simply wasn’t another way to cover that kind of mileage without long hours.</p>

<p>So when I see posts <a href="https://www.wired.com/story/silicon-valley-china-996-work-schedule/">espousing constant availability like a 9-9-6 culture</a>, I kinda get it. For the business, more hours ~= more work done. No, I wasn’t walking as fast in the 12th hour as I was in the 5th- but I wasn’t being negatively productive; I was still putting one foot in front of the other. And there are absolutely some businesses in hypergrowth where that extra marginal foot matters.</p>

<p><a href="https://x.com/garrytan/status/1965124089875685532">Investors</a> and founders encouraging the phenomenon are also acting logically. VC investing is a <a href="https://www.linkedin.com/pulse/whaling-venture-capital-long-tale-long-tail-returns-nathan-sieminski-u9aic/">long-tail market where most companies will go to zero but the ones that make it are huge</a>. If investors can convince every employee at each of their portfolio companies to work an extra hour, they will see massive benefits. Founders are similar, but more highly concentrated into a single company. And even if their company fails, showing hustle to the right investors gives them a great chance of getting referred to a plum job.</p>

<p>All that to say: I get why the <a href="https://ramp.com/velocity/san-francisco-tech-workers-996-schedule?utm_source=twitter">9-9-6 culture has gained steam</a>. And even from the employees’ perspective it can make sense! Early employees won’t have founder-level equity<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>, but they’ll have enough to be meaningful in the event of an exit. And many people find meaning and friendship at work- particularly if you just moved across the country to a west-coast city that’s thousands of miles away from everyone you’ve ever known.</p>

<p>But for the 99% of companies that aren’t truly in a hypergrowth phase, such a culture lowers the ceiling as much as it raises the floor. Why?</p>

<ul>
  <li><strong>It discourages creativity.</strong> Most people can only do a <a href="https://www.oliverburkeman.com/fourhours">handful of hours of creative work a day</a>. If your business isn’t in hypergrowth (but is trying to get there), your limiter is likely more creative ideas rather than more execution time. Spending those extra hours on pure execution rather than encouraging boredom will <a href="https://journals.aom.org/doi/10.5465/amd.2017.0033">stifle your creativity</a>.
    <ul>
      <li>As an example, I’ve worked with some incredibly talented colleagues who never learned how to scale themselves. As they accumulated more responsibilities they just worked more hours. At a certain point they physically couldn’t work more and they couldn’t keep pace with the organization. Working fewer hours would’ve forced them to develop effective systems to delegate and check in.</li>
    </ul>
  </li>
  <li><strong>It risks burning out the team</strong>. Even if you’re somehow ok with churning 90% of the team every few years, <a href="https://x.com/danluu/status/1477358578792951808">losing your 10% of top performers can take years to recover from</a>. Anecdotally, these people often have stronger negative reactions to decrees to work harder since they’re already pushing all they can.</li>
  <li><strong>It stops you from sprinting when it matters.</strong> If everyone is already going all out, you don’t have that extra gear to push for the big compliance deadline or upcoming customer demo. If I had seen a bear in my 12th hour of hiking I wasn’t going to be able to run away no matter how much I wanted to.</li>
</ul>

<p>Beyond the business case, I also just think it’s wrong at a personal level. Meeting your partner or life-long friends is often the most valuable thing you can get out of your 20s and 30s, but <a href="https://www.smithsonianmag.com/arts-culture/new-insights-how-american-couples-meet-180973335/">most people don’t meet them at work</a>. Instead, I think for some people work can almost be a retreat to something that they know and are good at, rather than a scary arena with unknown rules. But you don’t get better at making friends or dating by avoiding it.</p>

<p>Rather than building a team of people who constantly work long hours, I’d rather build a team of people that deeply care. The truth is, most of these people <em>will</em> work longer hours than normal. But they’re intentionally choosing how and when to work, and have shaped their routines accordingly. Maybe they’re logging off to go for a run every afternoon but still thinking about work in the shower. Or maybe they’re leaving early to see their kids’ soccer practice every Monday and checking Slack when they get back. They work hard because they care about it and get value out of it, not because they’re performing to an arbitrary standard<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup>. Those are the kind of people I want to work with.</p>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>This assumes the company exits in a standard way. With some of the acqui-hire deal structures the valley is using now where payouts for early employees are not guaranteed, this starts to look downright predatory. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p>A common excuse is that measuring how much someone cares is <strong>much</strong> more difficult than tracking hours spent in the office, which is ~trivial. But if you’re not willing to spend time figuring out who your top performers are, you’re probably not going to make it anyways. <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[I spent a week this summer hiking a 75 mile stretch of the PCT with a friend. We averaged ~18 miles a day, and would typically hike for 12 hours, get into camp around 7 at night, and fall into our sleeping bags shortly thereafter. On some nights I would’ve loved to have a bit more time to recover, but there simply wasn’t another way to cover that kind of mileage without long hours.]]></summary></entry><entry><title type="html">Losing (and Maintaining) Trust in Your Company</title><link href="http://localhost:4000/2025/09/03/losing-trust-in-company.html" rel="alternate" type="text/html" title="Losing (and Maintaining) Trust in Your Company" /><published>2025-09-03T00:00:00-07:00</published><updated>2025-09-03T00:00:00-07:00</updated><id>http://localhost:4000/2025/09/03/losing-trust-in-company</id><content type="html" xml:base="http://localhost:4000/2025/09/03/losing-trust-in-company.html"><![CDATA[<p>At any given time most people have a laundry-list of frustrations with their job. Yet even in the face of major disappointments like getting passed over for a promotion, they will often still feel positive about their work overall. Maybe they still really like their coworkers, or believe in the mission, or just enjoy the day-to-day mundanity enough that they’re ok with some frustration in the bigger picture.</p>

<p>But this can also quickly flip into a negative spiral, where every interaction suddenly becomes a major issue and sends them into the red. Some signs you might be experiencing this spiral include:</p>

<ul>
  <li>Your blood pressure spikes every time a certain person slacks you.</li>
  <li>You feeling like every decision getting made is wrong.</li>
  <li>You get irritated every time a specific initiative is raised.</li>
</ul>

<p>Often in tech this behavior is referenced to as “burnout”, where you detach from work due to feeling exhausted from a prolonged period of stress. But I don’t think that’s quite the right metaphor. Burnout leads to a passive detachment, not an active irritation like a spiral. Instead I’d liken this feeling to something closer to <a href="https://www.gottman.com/blog/blame-resentment-and-negative-sentiment-override/">a negative sentiment override</a>. The subtleties here matter because if you misdiagnose your feeling as burnout, your instinct may be to step away and rest. But getting out of a negative spiral requires active effort, not just time off.</p>

<p>Instead, I find the <a href="https://sketchplanations.com/the-trust-battery">trust battery</a> a much more helpful metaphor to think about this, as a battery that exists between you and your company. Positive actions like a raise or liking your team can raise the battery level to such a point that even large negatives like disagreeing with the company strategy or being overworked for months can still leave you generally positive about the experience. But if you deplete the battery for too long without any corresponding boosts, you’ll end up in the negative spiral and either be miserable or leave your job.</p>

<p>Successfully completing a few large projects each year or getting a regular raise will often leave you at a high enough stasis point. But just like gamblers going broke after hours at a table, if you stay long enough at one job, probability alone means that at some point the negatives will outweigh the positives. This is especially true if you’re at a job for a long (4+ year) stint like I was at <a href="https://www.angellist.com/">AngelList</a>.</p>

<p>I also found that these “easy” positive events weren’t always fully in my control. Getting a raise might depend on the company’s financials, how my manager viewed compensation, etc. In an ideal world my company would also do their part to keep me engaged, and I certainly view it as one of my primary duties as a manager. But even great managers are going to fuck up, and I don’t want to be relying on any outside force. At the end of the day it’s my life, and I need to take <a href="https://conscious.is/video/are-you-taking-100-responsibility">100% responsibility</a> for it.</p>

<p>So I developed a few habits to more actively keep myself engaged:</p>

<ul>
  <li><strong>Regularly interviewing candidates</strong>. Any interviewer knows that one of the most frequent questions you’re asked is “what do you like best about the company?” I found that coming up with an authentic answer and regularly repeating it to yourself and others almost indoctrinates you to believe it, just like <a href="https://www.bps.org.uk/research-digest/adopting-smile-can-make-you-feel-happier-large-global-study-finds">smiling can make you happier</a>.</li>
  <li><strong>Carving out time for energy boosting activities</strong>. Especially as a manager, often times your wins come from long term efforts like coaching your report and seeing them take over and lead a meeting flawlessly or shipping a quarter long roadmap. But if I’m having a bad day, I know that taking on a small ticket in the backlog and seeing all the tests go green will give me an energy boost right when I need it. I really like the term “<a href="https://www.intercom.com/blog/first-rule-prioritization-no-snacking/">snacking</a>” for this work. Like junk-food, I have to be careful not to over-indulge this impulse since it’s very rarely the most valuable work I could be doing. But I do think it’s valuable work when it lets me manage my mental health.</li>
  <li><strong>Fixing things yourself</strong>. Often decisions may seem out of your control, especially as you go farther down the org chart. But a reasonable percentage of the time you actually will be able to drive change simply by being the person in the company who cares the most about it. Even if you ultimately aren’t successful or things truly are out of your control, you will certainly be remembered by leadership as someone who cares. Whereas if you don’t even try, you never had a chance.</li>
  <li><strong>Actively building relationships outside my organization who are above me in the org chart</strong>. These diagonal relationships helped me trust the intent behind every decision, because I knew that the people making the call had good reasons— even if I didn’t agree.</li>
  <li>As a final test, <strong>taking a recruiter call or first interview externally</strong> can be very revealing. After the call, do you feel excited or nervous? Are there initiatives you’ll miss seeing to fruition? People you want to see grow a bit more? Taking that first step towards leaving can remind you what you value about your current company, or confirm it’s time to move on. Either way, you get some much needed clarity.</li>
</ul>]]></content><author><name></name></author><summary type="html"><![CDATA[At any given time most people have a laundry-list of frustrations with their job. Yet even in the face of major disappointments like getting passed over for a promotion, they will often still feel positive about their work overall. Maybe they still really like their coworkers, or believe in the mission, or just enjoy the day-to-day mundanity enough that they’re ok with some frustration in the bigger picture.]]></summary></entry></feed>